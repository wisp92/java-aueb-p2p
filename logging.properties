# Properties file which configures the operation of the JDK
# logging facility.

# The system will look for this config file, first using
# a System property specified at startup:
#
# >java -Djava.util.logging.config.file=logging.properties
#
# If this property is not specified, then the config file is
# retrieved from its default location at:
#
# JDK_HOME/jre/lib/logging.properties

# Global logging properties.
# ------------------------------------------
# The set of handlers to be loaded upon startup.
# Comma-separated list of class names.
# (? LogManager docs say no comma here, but JDK example has comma.)
handlers = java.util.logging.FileHandler, java.util.logging.ConsoleHandler

# Default global logging level.
# Loggers and Handlers may override this level
.level = SEVERE

# Loggers
# ------------------------------------------
# Loggers are usually attached to packages.
# Here, the level for each package is specified.
# The global level is used by default, so levels
# specified here simply act as an override.
p2p.components.level                          = WARNING
p2p.components.common.level                   = WARNING
p2p.components.communication.level            = FINE
p2p.components.communication.messages.level   = SEVERE
p2p.components.communication.exceptions.level = OFF
p2p.components.peers.level                    = FINE
p2p.components.trackers.level                 = FINE
p2p.utilities.level                           = WARNING
p2p.utilities.common.level                    = OFF
p2p.utilities.testing.level                   = INFO

# Handlers
# -----------------------------------------

# --- ConsoleHandler ---
# Override of global logging level
java.util.logging.ConsoleHandler.level     = FINE
java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter

# --- FileHandler ---
# Override of global logging level
java.util.logging.FileHandler.level     = ALL
java.util.logging.FileHandler.pattern   = logs/p2p_%u.log
java.util.logging.FileHandler.limit     = 50000
java.util.logging.FileHandler.count     = 3
java.util.logging.FileHandler.formatter = java.util.logging.SimpleFormatter 